/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application       ABLSolver;

libs              ("libuserincompressibleLESModels.so" "libuserfiniteVolume.so");

startFrom         startTime;

startTime         0.0;

stopAt            endTime;

endTime           30000.0;

deltaT            0.5;

writeControl      adjustableRunTime;

writeInterval     500.0; 

purgeWrite        0;

writeFormat       binary;
//writeFormat       ascii;

writePrecision    12;

writeCompression  compressed;
//writeCompression  uncompressed;

timeFormat        general;

timePrecision     6;

runTimeModifiable yes;

adjustTimeStep    yes;

maxCo             0.75;

maxDeltaT         25.0;

functions
{
    fieldAverages
    {
        type                 fieldAverage;
        functionObjectLibs   ("libfieldFunctionObjects.so");
        enabled              true;
        outputControl        outputTime;
        timeStart            2000.0;
        fields
        (
            Cs
            {
                mean         on;
                prime2Mean   off;
                base         time;
            }
        );
    }

    sliceData
    {
        type                 surfaces;
        functionObjectLibs   ("libsampling.so");
        interpolationScheme  cellPoint;
        outputControl        outputTime;
      //outputControl        timeStep;
      //outputInterval       1;
        surfaceFormat        vtk;
        fields               
        (
            U CsMean 
        );
        surfaces
        (
            slice_0
            {
                type         plane;
                basePoint    ( 200 200.1 200 );
                normalVector ( 0 1 0 );
                triangulate  false;
            }
            slice_1
            {
                type         plane;
                basePoint    ( 200 10.0 200 );
                normalVector ( 0 1 0 );
                triangulate  false;
            }
            slice_2
            {
                type         plane;
                basePoint    ( 200 50.0 200 );
                normalVector ( 0 1 0 );
                triangulate  false;
            }
            slice_3
            {
                type         plane;
                basePoint    ( 200 90.0 200 );
                normalVector ( 0 1 0 );
                triangulate  false;
            }
            slice_4
            {
                type         plane;
                basePoint    ( 200 130.0 200 );
                normalVector ( 0 1 0 );
                triangulate  false;
            }
        );
    }
}

// ************************************************************************* //
