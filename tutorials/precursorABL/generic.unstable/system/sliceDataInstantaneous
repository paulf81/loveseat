sliceDataInstantaneous
{
    type                surfaces;
    functionObjectLibs  ("libsampling.so");
    enabled             true;
    interpolationScheme cell;
    outputControl       timeStep;
    outputInterval      1;
    surfaceFormat       vtk;
    fields
    (
        U
        T
    );

    surfaces
    (
        sliceStreamwise
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 500);
                normalVector    (1 0 0);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceCrossstream
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 500);
                normalVector    (0 1 0);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceHorizontal5
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 15);
                normalVector    (0 0 1);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceHorizontal40
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 40);
                normalVector    (0 0 1);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceHorizontal90
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 90);
                normalVector    (0 0 1);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceHorizontal200
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 200);
                normalVector    (0 0 1);
            }
            interpolate     true;
            triangulate     false;
        }
        sliceHorizontal400
        {
            type            cuttingPlane;
            planeType       pointAndNormal;
            pointAndNormalDict
            {
                basePoint       (2000 2000 400);
                normalVector    (0 0 1);
            }
            interpolate     true;
            triangulate     false;
        }
    );
}
